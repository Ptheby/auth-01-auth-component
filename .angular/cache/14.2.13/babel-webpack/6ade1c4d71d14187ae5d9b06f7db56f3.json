{"ast":null,"code":"import _classCallCheck from \"C:/Users/pault/Desktop/CodeLabs/Epics/AngularFundamentalsII/auth-01-auth-component/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pault/Desktop/CodeLabs/Epics/AngularFundamentalsII/auth-01-auth-component/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject, catchError, tap, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar API_KEY = \"AIzaSyD8CJ827ndHnqcL5pmventi9fROFIUOnzI\";\nvar SIGN_UP_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\";\nvar SIGN_IN_URL = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.user = new Subject();\n    }\n\n    _createClass(AuthService, [{\n      key: \"signup\",\n      value: function signup(email, password) {\n        return this.http.post(SIGN_UP_URL + API_KEY, {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError), tap(function (resData) {\n          var expirationData = new Date(new Date().getTime + +resData.expiresIn * 1000);\n          var user = new User(resData.email, resData.localId, resDat.idToken);\n        }));\n      }\n    }, {\n      key: \"login\",\n      value: function login(email, password) {\n        return this.http.post(SIGN_IN_URL + API_KEY, {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(errorRes) {\n        var errorMessage = \"An Unknown Error Occurred!\";\n\n        if (!errorRes.error || !errorRes.error.error) {\n          return throwError(errorMessage);\n        }\n\n        switch (errorRes.error.error.message) {\n          case \"EMAIL_EXISTS\":\n            errorMessage = \"This Email Already Exists\";\n            break;\n\n          case 'EMAIL_NOT_FOUND':\n            errorMessage = 'This email does not exist';\n            break;\n\n          case 'INVALID_PASSWORD':\n            errorMessage = 'This Password is Incorrect';\n            break;\n        }\n\n        return throwError(errorMessage);\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: \"root\"\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}